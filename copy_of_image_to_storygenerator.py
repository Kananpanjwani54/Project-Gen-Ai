# -*- coding: utf-8 -*-
"""Copy of Image to StoryGenerator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bcHhInOmZW5wThDZfwS_WktHeylaeDYQ
"""

!pip install transformers
!pip install torch torchvision torchaudio
!pip install pillow
!pip install gradio

from PIL import Image
import torch
from transformers import BlipProcessor, BlipForConditionalGeneration, pipeline
import gradio as gr
# Load BLIP model from Hugging Face
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base").eval()

def generate_caption(image_path):
    image = Image.open(image_path).convert('RGB')
    inputs = processor(image, return_tensors="pt")
    with torch.no_grad():
        out = model.generate(**inputs)
    caption = processor.decode(out[0], skip_special_tokens=True)
    return caption

# Load GPT-2 text generation pipeline
story_generator = pipeline("text-generation", model="gpt2")

def generate_story(caption):
    prompt = f"Write a short story about: {caption}\n\n"
    story = story_generator(prompt, max_length=100, num_return_sequences=1)[0]['generated_text']
    return story

def image_to_story(image):
    caption = generate_caption(image)
    story = generate_story(caption)
    return f"Caption: {caption}\n\nStory:\n{story}"

gr.Interface(
    fn=image_to_story,
    inputs=gr.Image(type="filepath"),
    outputs="text",
    title="üñºÔ∏è Image to Story Generator",
    description="Upload an image and get a short AI-generated story."
).launch()